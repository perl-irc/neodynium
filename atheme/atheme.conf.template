# ABOUTME: Atheme IRC services configuration template with environment variable substitution
# ABOUTME: Optimized with OpenSSL for AMD EPYC performance and opensex flat file backend

# Atheme Configuration Template for ${ATHEME_NETWORK}
# Optimized with OpenSSL for AMD EPYC performance

/* Database configuration - using opensex flat file backend */
database {
    module = "opensex";
};

/* Network information */
loadmodule "backend/opensex";

serverinfo {
    name = "magnet-atheme.internal";
    desc = "${ATHEME_NETWORK} IRC Services";
    numeric = "00A";
    recontime = 10;
    restartonfailure = no;
    netname = "${ATHEME_NETWORK}";
    hidehostsuffix = "users.${TAILSCALE_DOMAIN}";
    adminname = "${ADMIN_NAME}";
    adminemail = "${ADMIN_EMAIL}";
    loglevel = { error; info; verbose; };
    maxlogins = 10;
    maxusers = 0;
    maxnicks = 10;
    maxchans = 20;
    emaillimit = 10;
    emailtime = 300;
    auth = none;
};

/* Uplink configuration - primary IRC server */
uplink "${ATHEME_HUB_HOSTNAME}" {
    host = "${ATHEME_HUB_HOSTNAME}";
    vhost = "magnet-atheme.${TAILSCALE_DOMAIN}";
    send_password = "${PASSWORD_9RL}";
    receive_password = "${SERVICES_PASSWORD}";
    port = 6667;
};

uplink "${ATHEME_FALLBACK_HOSTNAME}" {
    host = "${ATHEME_FALLBACK_HOSTNAME}";
    vhost = "magnet-atheme.${TAILSCALE_DOMAIN}";
    send_password = "${PASSWORD_1EU}";
    receive_password = "${SERVICES_PASSWORD}";
    port = 6667;
};


/* Load core services */
loadmodule "nickserv/main";
loadmodule "chanserv/main";
loadmodule "operserv/main";
loadmodule "memoserv/main";

/* NickServ configuration */
nickserv {
    nick = "NickServ";
    user = "services";
    host = "services.${TAILSCALE_DOMAIN}";
    real = "Nickname Services";
    aliases = "NS";
};

/* ChanServ configuration */
chanserv {
    nick = "ChanServ";
    user = "services";
    host = "services.${TAILSCALE_DOMAIN}";
    real = "Channel Services";
    aliases = "CS";
};

/* OperServ configuration */
operserv {
    nick = "OperServ";
    user = "services";
    host = "services.${TAILSCALE_DOMAIN}";
    real = "Operator Services";
    aliases = "OS";
};

/* MemoServ configuration */
memoserv {
    nick = "MemoServ";
    user = "services";
    host = "services.${TAILSCALE_DOMAIN}";
    real = "Memo Services";
    aliases = "MS";
};

/* Protocol module */
loadmodule "protocol/solanum";

/* Backend modules */
loadmodule "backend/opensex";

/* Crypto modules - OpenSSL optimized */
loadmodule "crypto/pbkdf2v2";
loadmodule "crypto/pbkdf2";


/* Essential NickServ modules */
loadmodule "nickserv/enforce";
loadmodule "nickserv/help";
loadmodule "nickserv/identify";
loadmodule "nickserv/info";
loadmodule "nickserv/list";
loadmodule "nickserv/logout";
loadmodule "nickserv/register";
loadmodule "nickserv/set_core";
loadmodule "nickserv/set_email";
loadmodule "nickserv/set_password";

/* Essential ChanServ modules */
loadmodule "chanserv/access";
loadmodule "chanserv/akick";
loadmodule "chanserv/ban";
loadmodule "chanserv/flags";
loadmodule "chanserv/help";
loadmodule "chanserv/info";
loadmodule "chanserv/invite";
loadmodule "chanserv/kick";
loadmodule "chanserv/list";
loadmodule "chanserv/op";
loadmodule "chanserv/register";
loadmodule "chanserv/set_core";
loadmodule "chanserv/topic";
loadmodule "chanserv/voice";

/* Essential OperServ modules */
loadmodule "operserv/akill";
loadmodule "operserv/help";
loadmodule "operserv/info";
loadmodule "operserv/rehash";
loadmodule "operserv/restart";
loadmodule "operserv/shutdown";

/* Essential MemoServ modules */
loadmodule "memoserv/help";
loadmodule "memoserv/list";
loadmodule "memoserv/read";
loadmodule "memoserv/send";
